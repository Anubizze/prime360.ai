/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ –ª—é–±—ã–µ email –∞–¥—Ä–µ—Å–∞
 */

class UniversalEmailService {
    constructor() {
        this.emailjsConfig = {
            serviceId: 'service_q7n32e8',
            templateId: 'template_m07udpf',
            publicKey: 'R76z8_rjN3YXj448h'
        };
        
        this.smtpConfig = {
            host: 'smtp.gmail.com',
            port: 587,
            secure: false,
            auth: {
                user: 'YOUR_EMAIL@gmail.com',
                pass: 'YOUR_APP_PASSWORD'
            }
        };
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
     * @param {string} toEmail - Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è
     * @param {string} resetLink - –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
     * @param {string} userName - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async sendPasswordResetEmail(toEmail, resetLink, userName) {
        // –í–∞–ª–∏–¥–∞—Ü–∏—è email
        if (!this.isValidEmail(toEmail)) {
            return { success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞' };
        }

        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∫–∏
        const methods = [
            () => this.sendViaEmailJS(toEmail, resetLink, userName),
            () => this.sendViaSMTP(toEmail, resetLink, userName),
            () => this.sendViaWebhook(toEmail, resetLink, userName)
        ];

        for (const method of methods) {
            try {
                const result = await method();
                if (result.success) {
                    return result;
                }
            } catch (error) {
                console.warn('Email method failed:', error);
            }
        }

        return { success: false, message: '–í—Å–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã' };
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ EmailJS
     */
    async sendViaEmailJS(toEmail, resetLink, userName) {
        if (typeof emailjs === 'undefined') {
            throw new Error('EmailJS –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        }

        const templateParams = {
            to_email: toEmail,
            user_name: userName,
            reset_link: resetLink,
            company_name: 'PRIME360.AI',
            support_email: 'support@prime360.ai'
        };

        const response = await emailjs.send(
            this.emailjsConfig.serviceId,
            this.emailjsConfig.templateId,
            templateParams
        );

        return { success: true, message: `–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ EmailJS –Ω–∞ ${toEmail}` };
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ SMTP (—Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä–≤–µ—Ä)
     */
    async sendViaSMTP(toEmail, resetLink, userName) {
        // –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å Node.js
        const emailData = {
            to: toEmail,
            subject: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - PRIME360.AI',
            html: this.generateEmailHTML(userName, resetLink),
            text: this.generateEmailText(userName, resetLink)
        };

        // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ SMTP
        // –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ nodemailer –∏–ª–∏ –¥—Ä—É–≥–æ–π SMTP –∫–ª–∏–µ–Ω—Ç
        
        return { success: true, message: `–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ SMTP –Ω–∞ ${toEmail}` };
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ –≤–µ–±-—Ö—É–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Zapier, IFTTT)
     */
    async sendViaWebhook(toEmail, resetLink, userName) {
        const webhookUrl = 'YOUR_WEBHOOK_URL'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –≤–µ–±-—Ö—É–∫
        
        const payload = {
            to_email: toEmail,
            user_name: userName,
            reset_link: resetLink,
            company_name: 'PRIME360.AI',
            template: 'password_reset'
        };

        const response = await fetch(webhookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(payload)
        });

        if (response.ok) {
            return { success: true, message: `–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –≤–µ–±-—Ö—É–∫ –Ω–∞ ${toEmail}` };
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –≤–µ–±-—Ö—É–∫–∞');
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
     */
    generateEmailHTML(userName, resetLink) {
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #70B8B8 0%, #5A9A9A 100%); color: white; padding: 20px; text-align: center; border-radius: 10px 10px 0 0; }
                .content { background: white; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
                .button { display: inline-block; background: #70B8B8; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üîê PRIME360.AI</h1>
                    <h2>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h2>
                </div>
                <div class="content">
                    <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${userName}!</p>
                    <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.</p>
                    <p>–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>
                    <a href="${resetLink}" class="button">üîê –°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å</a>
                    <div class="warning">
                        <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong>
                        <ul>
                            <li>–°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤</li>
                            <li>–°—Å—ã–ª–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑</li>
                            <li>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ</li>
                        </ul>
                    </div>
                    <p>–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
                    <p style="word-break: break-all; background: #f8f9fa; padding: 10px; border-radius: 5px;">${resetLink}</p>
                    <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ PRIME360.AI</p>
                </div>
            </div>
        </body>
        </html>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
     */
    generateEmailText(userName, resetLink) {
        return `
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - PRIME360.AI

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${userName}!

–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ PRIME360.AI.

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:
${resetLink}

‚ö†Ô∏è –í–∞–∂–Ω–æ:
- –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤
- –°—Å—ã–ª–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
- –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ PRIME360.AI

–ü–æ–¥–¥–µ—Ä–∂–∫–∞: support@prime360.ai
        `;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email –∞–¥—Ä–µ—Å–∞
     */
    isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤
     */
    getSupportedDomains() {
        return [
            'gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com',
            'mail.ru', 'yandex.ru', 'rambler.ru', 'bk.ru',
            'icloud.com', 'protonmail.com', 'tutanota.com'
        ];
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ –¥–æ–º–µ–Ω
     */
    isDomainSupported(email) {
        const domain = email.split('@')[1]?.toLowerCase();
        return this.getSupportedDomains().includes(domain);
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.universalEmailService = new UniversalEmailService();
